version: "3.7"

services:
  # MySQL cho service-user
  mysql-user:
    image: mysql:8.0
    container_name: mysql-user
    environment:
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: mysqlpassword
      MYSQL_DATABASE: user_db
      MYSQL_USER: usermysql
      MYSQL_PASSWORD: mysqlpassword
    ports:
      - "3307:3306"
    volumes:
      - ./services/service-user/init_script/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    restart: unless-stopped

  # MySQL cho service-quizz
  mysql-quizz:
    image: mysql:8.0
    container_name: mysql-quizz
    environment:
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: mysqlpassword
      MYSQL_DATABASE: quiz_db
      MYSQL_USER: quizzmysql
      MYSQL_PASSWORD: mysqlpassword
    ports:
      - "3308:3306"
    volumes:
      - ./services/service-quizz/init_script/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    restart: unless-stopped

  # MySQL cho service-question
  mysql-question:
    image: mysql:8.0
    container_name: mysql-question
    environment:
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: mysqlpassword
      MYSQL_DATABASE: question_db
      MYSQL_USER: questionmysql
      MYSQL_PASSWORD: mysqlpassword
    ports:
      - "3309:3306"
    volumes:
      - ./services/service-question/init-script/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    restart: unless-stopped

  # MySQL cho service-answer
  mysql-answer:
    image: mysql:8.0
    container_name: mysql-answer
    environment:
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: mysqlpassword
      MYSQL_DATABASE: answer_db
      MYSQL_USER: answermysql
      MYSQL_PASSWORD: mysqlpassword
    ports:
      - "3310:3306"
    volumes:
      - ./services/service-answer/init-script/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    restart: unless-stopped

  # MySQL cho service-result
  mysql-result:
    image: mysql:8.0
    container_name: mysql-result
    environment:
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: mysqlpassword
      MYSQL_DATABASE: result_db
      MYSQL_USER: resultmysql
      MYSQL_PASSWORD: mysqlpassword
    ports:
      - "3311:3306"
    volumes:
      - ./services/service-result/init-script/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    restart: unless-stopped

  # service-user
  service-user:
    build: ./services/service-user
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-user:3306/user_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=usermysql
      - SPRING_DATASOURCE_PASSWORD=mysqlpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      - mysql-user
    networks:
      - microservices-network
    restart: unless-stopped

  # service-quizz
  service-quizz:
    build: ./services/service-quizz
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-quizz:3306/quiz_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=quizzmysql
      - SPRING_DATASOURCE_PASSWORD=mysqlpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      - mysql-quizz
    networks:
      - microservices-network
    restart: unless-stopped

  # service-question
  service-question:
    build: ./services/service-question
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-question:3306/question_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=questionmysql
      - SPRING_DATASOURCE_PASSWORD=mysqlpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      - mysql-question
    networks:
      - microservices-network
    restart: unless-stopped

  # service-answer
  service-answer:
    build: ./services/service-answer
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-answer:3306/answer_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=answermysql
      - SPRING_DATASOURCE_PASSWORD=mysqlpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      - mysql-answer
    networks:
      - microservices-network
    restart: unless-stopped

  # service-result
  service-result:
    build: ./services/service-result
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-result:3306/result_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=resultmysql
      - SPRING_DATASOURCE_PASSWORD=mysqlpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      - mysql-result
    networks:
      - microservices-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build: ./gateway
    ports:
      - "8080:8080"
    depends_on:
      - service-user
      - service-quizz
      - service-question
      - service-answer
      - service-result
    networks:
      - microservices-network
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge
